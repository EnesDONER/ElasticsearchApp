@page "/"
@using Core.Persistence.Paging
@using SozcuApp.Blazor.Models
@using SozcuApp.Blazor.Services
@inject NewsService NewsService
@rendermode InteractiveServer

<PageTitle>News</PageTitle>

<div class="input-group">
    <input @bind-value="searchQuery" class="form-control" placeholder="Aranacak değer girin...">
    <button class="btn btn-primary" @onclick="SearchNews">Click me</button>
</div>

@if (news == null || news.Items == null || !news.Items.Any())
{
    <p>No news items found.</p>
}
else
{
    <div class="mt-3">
        <div class="row">
            @foreach (var item in news.Items)
            {
                <div class="col-md-4">
                    <div class="card mb-4">
                        <img class="card-img-top" src="@item.ImageUrl" alt="Card image cap">
                        <div class="card-body">
                            <h5 class="card-title mb-2">@item.Text</h5>
                            <p class="card-text">@item.TimeStamp</p>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="row mb-3 mt-3 align-items-center">
            <div class="col-md-6 d-flex justify-content-between">
                <button class="btn btn-secondary" @onclick="PreviousPage" disabled="@(!CanGoToPreviousPage())">Previous</button>
                <span>Page @(pageIndex + 1)</span>
                <button class="btn btn-secondary" @onclick="NextPage" disabled="@(!CanGoToNextPage())">Next</button>
            </div>
            <div class="col-md-6 d-flex justify-content-between align-items-center">
                <select style="width: 20%;" id="pageSizeSelect" class="form-select mx-2" @onclick="SearchNews" @bind="pageSize">
                    <option value="3">3</option>
                    <option value="6">6</option>
                    <option value="9">9</option>
                    <option value="18">18</option>
                </select>
                <span style="width: 80%;">Total @news.Count Entity</span>
            </div>
        </div>
    </div>
}

@code {
    Paginate<NewsView> news = new();
    private int pageIndex = 0;
    private int pageSize = 6;
    private string searchQuery = "";

    protected override async Task OnInitializedAsync()
    {
        await GetListNews();
    }

    private async Task GetListNews()
    {
        news = await NewsService.GetListNews(pageIndex, pageSize);
    }

    private async Task SearchNews()
    {
        pageIndex = 0;
        await GetListSearchNews(searchQuery);
    }

    private async Task GetListSearchNews(string value)
    {
        news = await NewsService.GetListSearchNews(value, pageIndex, pageSize);
    }

    private async Task PreviousPage()
    {
        if (CanGoToPreviousPage())
        {
            pageIndex--;
            await GetListSearchNews(searchQuery);
        }
    }

    private async Task NextPage()
    {
        if (CanGoToNextPage())
        {
            pageIndex++;
            await GetListSearchNews(searchQuery);
        }
    }

    private bool CanGoToPreviousPage()
    {
        return pageIndex > 0;
    }

    private bool CanGoToNextPage()
    {
        return news != null && news.Items.Count == pageSize;
    }

    private async Task OnPageSizeChanged()
    {
        pageIndex = 0;
        await GetListSearchNews(searchQuery);
    }
}
